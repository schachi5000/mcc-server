name:
  Docker Deployment to ESC

on:
  push:
    branches:
      - release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    name: Build, Tag, Push Docker image and Deploy to AWS ECS
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Setup Java 11
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: '11'
      # Step 2: Set up AWS credentials for the job
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Distribution
        run: |
          ./gradlew installDist

      # Step 4: Build the Docker image
      - name: Build the Docker image
        run: |
          docker build --platform linux/amd64 -t schacherpro/mcc-server .

      # Step 5: Tag the image with the ECR repository URI
      - name: Tag Docker image for ECR
        run: |
          docker tag schacherpro/mcc-server:latest ${{ secrets.AWS_ECR_REPOSITORY }}/schacherpro/mcc-server:latest

      # Step 6: Push the Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.AWS_ECR_REPOSITORY }}/schacherpro/mcc-server:latest